# -----------------------------------------------------------------------------
# Author: Alexander Kravets <alex@slatestudio.com>,
#         Slate Studio (http://www.slatestudio.com)
#
# Coding Guide:
#   https://github.com/thoughtbot/guides/tree/master/style/coffeescript
# -----------------------------------------------------------------------------

# -----------------------------------------------------------------------------
# VIEW
#
# config options:
#   formClass        - custom form class to be used
#   formSchema       - form schema for object, autogenerated if missing
#   disableDelete    - do not add delete button below the form
#   disableSave      - do not add save button in header
#   fullsizeView     â€” use fullsize layout in desktop mode
#   onViewShow       - on show callback
#
# public methods:
#   show(callback)
#   destroy()
#
# -----------------------------------------------------------------------------
class @View
  constructor: (@module, @config, @closePath, @object, @title) ->
    @store = @config.arrayStore ? @config.objectStore

    @$el =$ "<section class='view #{ @module.name }' style='display:none;'>"

    # fullsize
    if @config.fullsizeView
      @$el.addClass 'fullsize'

    # header
    @$header =$ "<header></header>"
    @$title  =$ "<div class='title'></div>"
    @$header.append @$title
    @$el.append @$header
    @_set_title()

    # close
    @$closeBtn =$ "<a href='#{ @closePath }' class='close'>Close</a>"
    #@$closeBtn.on 'click', (e) => @_close(e)
    @$header.append @$closeBtn

    # save
    unless @config.disableSave
      @$saveBtn =$ "<a href='#' class='save'>Save</a>"
      @$saveBtn.on 'click', (e) => @_save(e)
      @$header.append @$saveBtn

    # form
    @form = new (@config.formClass ? Form)(@object, @config)
    @$el.append @form.$el
    @_add_form_delete_button()


  # PRIVATE ===============================================

  _set_title: (reset=false) ->
    if reset && @config.arrayStore then @title = null
    title  = @title
    title ?= @object[@config.itemTitleField] if @config.itemTitleField
    title ?= _firstNonEmptyValue(@object)
    @$title.html(title.plainText())


  _add_form_delete_button: ->
    unless @config.disableDelete or @config.objectStore or (! @object)
      @$deleteBtn =$ "<a href='#' class='delete'>Delete</a>"
      @$deleteBtn.on 'click', (e) => @_delete(e)
      @form.$el.append @$deleteBtn


  _save_success: ->
    @$el.removeClass('view-saving')
    @_set_title(true)
    @form.updateValues(@object)


  _save_error: (message, validationErrors) ->
    @$el.removeClass('view-saving')
    chr.showError(message)
    @form.showValidationErrors(validationErrors)


  # EVENTS ================================================

  # _close: (e) ->
  #   @destroy()


  _save: (e) ->
    e.preventDefault()
    @$el.addClass('view-saving')

    serializedFormObj = @form.serialize()

    if @object
      @store.update @object._id, serializedFormObj,
        onSuccess: (@object) => @_save_success()
        onError:   (errors)  => @_save_error('Changes were not saved.', errors)
    else
      @store.push serializedFormObj,
        onSuccess: (@object) =>
          @_save_success()
          @_add_form_delete_button()
          chr.updateHash("#/#{ @closePath }/view/#{ @object._id }", true)
        onError: (errors) => @_save_error('Item were not created.', errors)


  _delete: (e) ->
    e.preventDefault()
    if confirm("Are you sure?")
      @store.remove @object._id,
        onSuccess: => chr.updateHash("#/#{ @closePath }") #; @destroy()
        onError:   -> chr.showError('Can\'t delete object.')


  # PUBLIC ================================================

  show: (callback) ->
    @$el.show 0, =>
      callback?()
      @form.initializePlugins()
      @config.onViewShow?(@)


  destroy: ->
    @form.destroy()
    @$el.remove()





